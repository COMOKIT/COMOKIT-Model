/******************************************************************
 * Name: $TITLE$
 * $DESC$ 
 * Based on a template model, part of COMOKIT. Its goal is to create simple experiments on a specific policy over a set of case studies. 
 * Release 1.0, May 2020. see http://comokit.org for support and updates
 * Author: $AUTHOR$
 * Tags: covid19,epidemiology
 ******************************************************************/

model $TITLE$ 

import "All COMOKIT.gaml"

global {
	
	// Parameter file folder
	// by default parameter files are placed in Parameters/ folder of COMOKIT
	// if you decide to redefine the path to that folder identify the place COMOKIT can find your parameter files
	string parameter_folder_path <- "../../COMOKIT/Parameters/";
	  
	string POLICY_NAME <- "your_policy"; // Not mandatory but will be used in GUI
}

experiment $TITLE$ parent: "Abstract Experiment" autorun: true {

	// In order to compare simulation within the same GUI, one has to launch several simulations:
	// Each simulation is created with a given dataset name	
	action _init_ {
		
		// By default, the model will create 1 simulation for each datasets available in the 'Datasets' folder.
		list<string> dirs <- gather_dataset_names();
		// Instead, the modeler can choose the folders (in the 'Datasets' folder) it wants to use. 
		// For example:
		// list<string> dirs <- ['Sample2','Sample1'];
		
		// In this experiment, all the simulations will start with the same random seed.
		// We choose one random seed, which will be used to initialize the random number generator of all the simulations 
		float simulation_seed <- rnd(2000.0);
		
		loop s over:  dirs {
			// We create 1 simulation for each of the datasets.
			create simulation with: [dataset_path::build_dataset_path(_case_study_folder_name::s), seed::simulation_seed] {
				// Title of the display for each simulation and legend in the plot.
				name <- POLICY_NAME + " on: " + s;
				
				// ***************************************************************************
				// SEE Model/Entities/Authority.gaml for built-in functions to created policies
				// ***************************************************************************
				ask Authority {
					policy <- create_no_containment_policy();
				}
			}
		}
	}

	// Setup a chart to follow the number of infectious cases over the simulations
	permanent {
		display "charts" toolbar: false background: #black refresh: every(24 #cycle) {
			chart "Infectious cases" background: #black axes: #black color: #white title_font: default legend_font: font("Helvetica", 12, #bold) title_visible: true {
				loop s over: simulations {
					data s.name value: s.number_of_infectious color: s.color marker: false style: line thickness: 2;
				}
			}
		}
	}

	// The block where the GUI of each simulation is declared
	output {
		// GUI components can be enabled / disabled
		layout #split consoles: false editors: false navigator: false tray: false tabs: false toolbars: false;

		display "Main" parent: default_display {
			species SpatialPolicy {
				draw application_area empty: true color: #red;
			}
		}
	}
}