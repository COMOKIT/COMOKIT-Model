/***
* Name: $TITLE$
* $DESC$
* Based on a template model, part of COMOKIT. Its goal is to create simple experiments on a specific policy. 
* Release 1.0, May 2020. see http://comokit.org for support and updates
* Author: $AUTHOR$
* Tags: covid19,epidemiology
***/

model $TITLE$ 

import "All COMOKIT.gaml"

global {

	// Parameter file folder
	// by default parameter files are placed in Parameters/ folder of COMOKIT
	// if you decide to redefine the path to that folder identify the place COMOKIT can find your parameter files
	string parameter_folder_path <- "../../COMOKIT/Parameters/";

	string dataset_path <- "../Datasets/Case Study/"; // Relative path to the folder containing the boundary.shp, buildings.shp, satellite.png, etc. datafiles. 		
	
	action define_policy{  
		// ***************************************************************************
		// SEE Model/Entities/Authority.gaml for built-in functions to created policies
		// ***************************************************************************	
		ask Authority {
			// A policy with tests and lockdown of the whole family of positively tested case.
			AbstractPolicy d <- create_detection_policy(100, false, false);
			FamilyOfPositiveAtHome famP <- create_family_of_positive_at_home_policy();
			policy <- combination([d, famP]);

			// Agent that monitors the activity lost (necessary to plot it) 
			create ActivitiesMonitor returns: result;
			act_monitor <- first(result);
		}
	}
}

experiment $TITLE$ parent: "Abstract Experiment" autorun: true {

	permanent {
		// Setup a chart to follow the number of infectious cases over the simulations
		display "charts" toolbar: false background: #black refresh: every(24 #cycle) {
			chart "Infected cases" background: #black axes: #black color: #white title_font: default legend_font: font("Helvetica", 12, #bold) title_visible: true {
				loop s over: simulations {
					data s.name value: s.number_of_infectious color: s.color marker: false style: line thickness: 2;
				}
			}
		}
		
		// Setup a set of charts to  monitor the lost of activities  (requires to have initialized an ActivitiesMonitor agent in the Authority)
		display "activities" toolbar: false background: #black refresh: every(24.0) {
			chart "Work" background: #black axes: #white color: #white title_font: default legend_font: font("Helvetica", 10, #bold) position: {0,0} size: {0.5,0.5} {
				loop s over: simulations {
					data s.name value: s.decrease_act_work color: s.color marker: false style: line thickness: 2;
				}
			}

	 		chart "School" background: #black axes: #white color: #white title_font: default legend_font: font("Helvetica", 10, #bold) position: {0.5,0} size: {0.5,0.5} {
				loop s over: simulations {
					data s.name value: s.decrease_act_study color: s.color marker: false style: line thickness: 2;
				}
			}		
			
			chart "Eating" background: #black axes: #white color: #white title_font: default legend_font: font("Helvetica", 10, #bold) position: {0,0.5} size: {0.5,0.5} {
				loop s over: simulations {
					data s.name value: s.decrease_act_eat color: s.color marker: false style: line thickness: 2;
				}
			}	
			
			chart "Shopping" background: #black axes: #white color: #white title_font: default legend_font: font("Helvetica", 10, #bold) position: {0.5,0.5} size: {0.5,0.5} {
				loop s over: simulations {
					data s.name value: s.decrease_act_shopping color: s.color marker: false style: line thickness: 2;
				}
			}	 							
		}
	}

	// The block where the user interface is defined
	output {
		// You can enable/disable part of the GUI utilities	
		layout #split consoles: false editors: false navigator: false tray: false tabs: false toolbars: false;

		// A 3D display
		display name synchronized: false type: opengl background: #black draw_env: false parent: default_3D_display {

			graphics "Simulation Name" {
				draw world.name  font: default at: {0, world.shape.height/2 - 30#px} color: text_color anchor: #top_left;
			}
			graphics "Day and Cases" {
				draw ("Day " + int((current_date - starting_date) /  #day)) + " | " + ("Cases " + world.number_of_infectious)  font: default at: {0, world.shape.height/2 - 50#px}  color: text_color anchor: #top_left;
			}
		}
		

		// The default_display for 2D display of the map.
		display "Main" parent: default_display {
			species SpatialPolicy {
				draw application_area empty: true color: #red;
			}
		}
	}
}
