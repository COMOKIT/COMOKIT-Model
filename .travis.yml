dist: bionic
branches:
  only:
  - master

before_script:
  - GAMA_LINUX=$(curl -s https://api.github.com/repos/gama-platform/gama/releases/tags/continuous | grep  continuous/GAMA1.8_Continuous_withJDK_Linux | cut -d ':' -f 2,3 | tr -d \"); echo $GAMA_LINUX
  - GAMA_MAC=$(curl -s https://api.github.com/repos/gama-platform/gama/releases/tags/continuous | grep  continuous/GAMA1.8_Continuous_withJDK_Mac | cut -d ':' -f 2,3 | tr -d \"); echo $GAMA_MAC
  - GAMA_WINDOWS=$(curl -s https://api.github.com/repos/gama-platform/gama/releases/tags/continuous | grep  continuous/GAMA1.8_Continuous_withJDK_Win | cut -d ':' -f 2,3 | tr -d \"); echo $GAMA_WINDOWS
script:
  # Add extra nature in .project
  - sed -i -e  "s/gamaNature<\/nature>/gamaNature<\/nature>\n\t\t<nature>msi.gama.application.builtinNature<\/nature>/g" ./COMOKIT/.project

  #
  #   Linux build
  #       =======
  - curl -o gama.zip -fSL $(echo $GAMA_LINUX)
  - unzip gama.zip -d ./GAMA
  - chmod +x ./GAMA/headless/gama-headless.sh
  # Get model jar path
  - modelJar=`find ./GAMA -name 'msi.gama.models*'`; echo $modelJar
  # Add COMOKIT in models
  - mv $modelJar ./models.zip
  - unzip ./models.zip -d ./models
  - cp -r COMOKIT ./models/models/ && cp -r COMOKIT\ Template\ Project ./models/models/
  - (cd models; zip -r --symlinks ../$modelJar .)
  # Fix GAMA plugins security
  - jarSize=`ls -l $modelJar | cut -d " " -f5`; echo $jarSize
  - sed -i "/<artifact classifier='osgi.bundle' id='msi.gama.models'/,/<\/artifact>/ s/<property name.*/<property name='download.size' value='$jarSize'\/>/g;" ./GAMA/artifacts.xml
  # Prepare release
  - zip -r -q --symlinks ./COMOKIT-Linux.zip ./GAMA

  # Clean GAMA version
  - rm -fr ./GAMA ./models.zip ./models

  #
  #   Mac build
  #       =======
  - curl -o gama.zip -fSL $(echo $GAMA_MAC)
  - unzip gama.zip -d ./GAMA
  - chmod +x ./GAMA/Gama.app/Contents/headless/gama-headless.sh
  # Get model jar path
  - modelJar=`find ./GAMA -name 'msi.gama.models*'`; echo $modelJar
  # Add COMOKIT in models
  - mv $modelJar ./models.zip
  - unzip ./models.zip -d ./models
  - cp -r COMOKIT ./models/models/ && cp -r COMOKIT\ Template\ Project ./models/models/
  - (cd models; zip -r --symlinks ../$modelJar .)
  # Fix GAMA plugins security
  - jarSize=`ls -l $modelJar | cut -d " " -f5`; echo $jarSize
  - sed -i "/<artifact classifier='osgi.bundle' id='msi.gama.models'/,/<\/artifact>/ s/<property name.*/<property name='download.size' value='$jarSize'\/>/g;" ./GAMA/Gama.app/Contents/Eclipse/artifacts.xml
  # Prepare release
  - zip -r -q --symlinks ./COMOKIT-Mac.zip ./GAMA/Gama.app

  # Clean GAMA version
  - rm -fr ./GAMA ./models.zip ./models

  #
  #   Windows build
  #       =======
  - curl -o gama.zip -fSL $(echo $GAMA_WINDOWS)
  - unzip gama.zip -d ./GAMA
  # Get model jar path
  - modelJar=`find ./GAMA -name 'msi.gama.models*'`; echo $modelJar
  # Add COMOKIT in models
  - mv $modelJar ./models.zip
  - unzip ./models.zip -d ./models
  - cp -r COMOKIT ./models/models/ && cp -r COMOKIT\ Template\ Project ./models/models/
  - (cd models; zip -r --symlinks ../$modelJar .)
  # Fix GAMA plugins security
  - jarSize=`ls -l $modelJar | cut -d " " -f5`; echo $jarSize
  - sed -i "/<artifact classifier='osgi.bundle' id='msi.gama.models'/,/<\/artifact>/ s/<property name.*/<property name='download.size' value='$jarSize'\/>/g;" ./GAMA/artifacts.xml
  # Prepare release
  - zip -r -q --symlinks ./COMOKIT-Win.zip ./GAMA

before_deploy:
  # Remove latest release
  - LATEST_COMOKIT_URL=$(node -pe 'JSON.parse(process.argv[1]).url' "$(curl -s  https://api.github.com/repos/COMOKIT/COMOKIT-Model/releases/tags/latest)")
  - |
    if [ $LATEST_COMOKIT_URL == undefined ]; then 
      echo "No continuous release to delete"; 
    else 
      echo $LATEST_COMOKIT_URL;
      bash -c "curl -H \"Authorization: token ${GITHUB_API_KEY}\" -H \"Accept: application/vnd.github.v3+json\" -X DELETE ${LATEST_COMOKIT_URL}";
    fi
  # Update tag
  - git remote add master https://${GITHUB_API_KEY}@github.com/COMOKIT/COMOKIT-Model.git
  - git fetch master --tags
  - git tag -f latest
  - git push master --tags -f
deploy:
  provider: releases
  name: "All-In-One Version Continuous"
  body: "Prerelease of COMOKIT archived with GAMA JDK Continuous and COMOKIT's default models (in Library model)"
  overwrite: true
  tag_name: latest
  prerelease: true
  file:
    - "COMOKIT-Win.zip"
    - "COMOKIT-Mac.zip"
    - "COMOKIT-Linux.zip"
  skip_cleanup: true
  on:
    repo: COMOKIT/COMOKIT-Model
    branch: master
    tags: false
  api_key: $GITHUB_API_KEY
